-- MySQL Script generated by MySQL Workbench
-- Sat Aug 20 01:04:54 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`cliente` (
  `id` INT NOT NULL,
  `nome` VARCHAR(100) NULL,
  `identificacao` VARCHAR(16) NULL,
  `endereco_id` INT NULL,
  `tipo_cliente` CHAR(1) NULL DEFAULT 'F' COMMENT 'Assume F para pessoa f√≠sica e J para pessoa juridica.',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`produto` (
  `id` INT NULL,
  `nome` VARCHAR(45) NULL,
  `descricao` VARCHAR(252) NULL,
  `valor` FLOAT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`entrega`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`entrega` (
  `id` INT NOT NULL,
  `empresa_log` VARCHAR(45) NULL,
  `data_prevista` DATE NULL,
  `data_entrega` DATETIME NULL,
  `status` INT NULL,
  `valor_frete` FLOAT NULL,
  `codigo_rastreio` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`pagamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`pagamento` (
  `id` INT NOT NULL,
  `tipo_pagamento` CHAR(3) NULL,
  `numero_cartao` VARCHAR(45) NULL,
  `data_validade` VARCHAR(45) NULL,
  `nome_portador` VARCHAR(45) NULL,
  `cpf_cnpj_portador` VARCHAR(45) NULL,
  `codigo_barras` VARCHAR(45) NULL,
  `data_vencimento_boleto` DATE NULL,
  `data_emissao_boleto` DATE NULL,
  `data_pagamento_recebido` DATE NULL,
  `status` INT NULL,
  `valor` FLOAT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`pedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`pedido` (
  `id` INT NULL,
  `status` VARCHAR(45) NULL,
  `descricao` VARCHAR(45) NULL,
  `cliente_id` INT NOT NULL,
  `status` INT NULL,
  `entrega_id` INT NOT NULL,
  `pagamento_id` INT NOT NULL,
  PRIMARY KEY (`id`, `cliente_id`, `entrega_id`, `pagamento_id`),
  INDEX `fk_pedido_cliente1_idx` (`cliente_id` ASC) VISIBLE,
  INDEX `fk_pedido_entrega1_idx` (`entrega_id` ASC) VISIBLE,
  INDEX `fk_pedido_pagamento1_idx` (`pagamento_id` ASC) VISIBLE,
  CONSTRAINT `fk_pedido_cliente1`
    FOREIGN KEY (`cliente_id`)
    REFERENCES `mydb`.`cliente` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pedido_entrega1`
    FOREIGN KEY (`entrega_id`)
    REFERENCES `mydb`.`entrega` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pedido_pagamento1`
    FOREIGN KEY (`pagamento_id`)
    REFERENCES `mydb`.`pagamento` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`fornecedor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`fornecedor` (
  `id` INT NOT NULL,
  `razao_social` VARCHAR(45) NULL,
  `cnpj` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`fornecedor_produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`fornecedor_produto` (
  `fornecedor_id` INT NOT NULL,
  `produto_id` INT NOT NULL,
  PRIMARY KEY (`fornecedor_id`, `produto_id`),
  INDEX `fk_fornecedor_has_produto_produto1_idx` (`produto_id` ASC) VISIBLE,
  INDEX `fk_fornecedor_has_produto_fornecedor_idx` (`fornecedor_id` ASC) VISIBLE,
  CONSTRAINT `fk_fornecedor_has_produto_fornecedor`
    FOREIGN KEY (`fornecedor_id`)
    REFERENCES `mydb`.`fornecedor` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_fornecedor_has_produto_produto1`
    FOREIGN KEY (`produto_id`)
    REFERENCES `mydb`.`produto` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`estoque`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`estoque` (
  `id` INT NOT NULL,
  `local` VARCHAR(30) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`estoque_has_produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`estoque_has_produto` (
  `estoque_id` INT NOT NULL,
  `produto_id` INT NOT NULL,
  `quantidade` INT NULL,
  PRIMARY KEY (`estoque_id`, `produto_id`),
  INDEX `fk_estoque_has_produto_produto1_idx` (`produto_id` ASC) VISIBLE,
  INDEX `fk_estoque_has_produto_estoque1_idx` (`estoque_id` ASC) VISIBLE,
  CONSTRAINT `fk_estoque_has_produto_estoque1`
    FOREIGN KEY (`estoque_id`)
    REFERENCES `mydb`.`estoque` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_estoque_has_produto_produto1`
    FOREIGN KEY (`produto_id`)
    REFERENCES `mydb`.`produto` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`pedido_has_produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`pedido_has_produto` (
  `pedido_id` INT NOT NULL,
  `produto_id` INT NOT NULL,
  `quantidade` INT NULL,
  PRIMARY KEY (`pedido_id`, `produto_id`),
  INDEX `fk_pedido_has_produto_produto1_idx` (`produto_id` ASC) VISIBLE,
  INDEX `fk_pedido_has_produto_pedido1_idx` (`pedido_id` ASC) VISIBLE,
  CONSTRAINT `fk_pedido_has_produto_pedido1`
    FOREIGN KEY (`pedido_id`)
    REFERENCES `mydb`.`pedido` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pedido_has_produto_produto1`
    FOREIGN KEY (`produto_id`)
    REFERENCES `mydb`.`produto` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`fornecedor_terceiro`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`fornecedor_terceiro` (
  `id` INT NOT NULL,
  `razao_social` VARCHAR(45) NULL,
  `cnpj` VARCHAR(45) NULL,
  `endereco` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`vendas_terceiros`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`vendas_terceiros` (
  `fornecedor_terceiro_id` INT NOT NULL,
  `pedido_id` INT NOT NULL,
  `quantidade` INT NULL,
  PRIMARY KEY (`fornecedor_terceiro_id`, `pedido_id`),
  INDEX `fk_fornecedor_terceiro_has_pedido_pedido1_idx` (`pedido_id` ASC) VISIBLE,
  INDEX `fk_fornecedor_terceiro_has_pedido_fornecedor_terceiro1_idx` (`fornecedor_terceiro_id` ASC) VISIBLE,
  CONSTRAINT `fk_fornecedor_terceiro_has_pedido_fornecedor_terceiro1`
    FOREIGN KEY (`fornecedor_terceiro_id`)
    REFERENCES `mydb`.`fornecedor_terceiro` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_fornecedor_terceiro_has_pedido_pedido1`
    FOREIGN KEY (`pedido_id`)
    REFERENCES `mydb`.`pedido` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
